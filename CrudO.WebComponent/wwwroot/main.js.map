{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/alert/alert.component.ts","./src/app/components/alert/alert.component.html","./src/app/form-generator/components/check-box-control/check-box-control.component.ts","./src/app/form-generator/components/check-box-control/check-box-control.component.html","./src/app/form-generator/components/form/form.component.ts","./src/app/form-generator/components/form/form.component.html","./src/app/form-generator/components/input-text/input-text.component.ts","./src/app/form-generator/components/input-text/input-text.component.html","./src/app/form-generator/components/select-from-catalog/select-from-catalog.component.ts","./src/app/form-generator/components/select-from-catalog/select-from-catalog.component.html","./src/app/form-generator/directives/ng-var-directive.ts","./src/app/form-generator/form-generator.module.ts","./src/app/form-generator/services/forms.service.ts","./src/app/menu/components/bread-crumb/bread-crumb.component.ts","./src/app/menu/components/bread-crumb/bread-crumb.component.html","./src/app/menu/components/menu/menu.component.ts","./src/app/menu/components/menu/menu.component.html","./src/app/menu/menu-routing.module.ts","./src/app/menu/menu.module.ts","./src/app/menu/models/bread-crumb-item.ts","./src/app/models/item.ts","./src/app/paged-list/components/paged-list/paged-list.component.ts","./src/app/paged-list/components/paged-list/paged-list.component.html","./src/app/paged-list/components/pagination/pagination.component.ts","./src/app/paged-list/components/pagination/pagination.component.html","./src/app/paged-list/paged-list.module.ts","./src/app/services/http-client.service.ts","./src/app/services/modal.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  // { path: '', pathMatch: 'full', redirectTo: '/main' },\r\n  // {\r\n  //   path: 'main',\r\n  //   component: AppComponent\r\n  // },\r\n\r\n  // {\r\n  //   path: \"form\",\r\n  //   loadChildren: () => import('./form-generator/form-generator.module').then(m => m.FormGeneratorModule),\r\n  //   component: FormComponent\r\n\r\n  // },\r\n  // {\r\n  //   path:\"test\",\r\n  //   component:TestComponent\r\n  // }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, NgZone, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AlertComponent } from './components/alert/alert.component';\r\nimport { FormComponent } from './form-generator/components/form/form.component';\r\nimport { SelectFromCatalogComponent } from './form-generator/components/select-from-catalog/select-from-catalog.component';\r\nimport { Form } from './models/form';\r\nimport { MenuComponent } from './menu/components/menu/menu.component';\r\nimport { BreadCrumbItem } from './menu/models/bread-crumb-item';\r\nimport { FormsContext } from './models/forms-context';\r\n\r\nimport { Item } from './models/item';\r\nimport { Data } from './paged-list/models/data';\r\n\r\n\r\nimport { HttpClientService } from './services/http-client.service';\r\nimport { ModalService } from './services/modal.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  @ViewChild(FormComponent) FormComponent!: FormComponent;\r\n  @ViewChild(MenuComponent) MenuComponent!: MenuComponent;\r\n  @ViewChild(AlertComponent) AlertComponent!: AlertComponent;\r\n  @ViewChild(SelectFromCatalogComponent) SelectFromCatalogComponent!: SelectFromCatalogComponent;\r\n\r\n  BreadCrumbItems!: BreadCrumbItem[];\r\n\r\n\r\n  FormsContext?: FormsContext;\r\n  currentUser?: string;\r\n\r\n  CatalogData?: Data;\r\n\r\n\r\n  serverUrl = window.location.protocol + '//' + window.location.host;\r\n  formsApiPath = \"/api\";\r\n  currentControl: any;\r\n\r\n  constructor(\r\n    private httpClientService: HttpClientService,\r\n    private router: Router,\r\n    private ngZone: NgZone,\r\n    private modalService: ModalService\r\n  ) {\r\n    this.BreadCrumbItems = [];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.httpClientService.get(this.serverUrl + this.formsApiPath + \"/Forms/GetCurrentUser\")\r\n      .subscribe((u: any) => {\r\n\r\n        this.currentUser = u.value;\r\n        this.getRootDataContext();\r\n      }, this.ShowError);\r\n  }\r\n\r\n\r\n\r\n  getRootDataContext = () => {\r\n\r\n\r\n    this.httpClientService.get(this.serverUrl + this.formsApiPath + \"/Forms/GetRootDataContext\")\r\n      .subscribe((c: FormsContext) => {\r\n        this.FormsContext = c;\r\n        this.addToBreadCrumb(c.title!);\r\n      }, this.ShowError);\r\n  }\r\n\r\n\r\n  /*****************************************MENU*******************************************/\r\n\r\n  //When they click a menu item, we request dataitems to show them on the page body\r\n  menuItemClicked = (e: Item) => {\r\n\r\n    if (e.title === \"Properties\") {\r\n      this.EditDataItem(e);\r\n    }\r\n    else {\r\n      var apiPath = e.navRoutes!.apiGetDataPath;\r\n      this.httpClientService.post(this.serverUrl + apiPath, e)\r\n        .subscribe((x: Data) => {\r\n          this.FormsContext!.data = x;\r\n          this.currentControl = x;\r\n\r\n        }, this.ShowError);\r\n    }\r\n\r\n    //}\r\n\r\n  }\r\n  /**************************************PAGE**********************************************/\r\n\r\n  AddNewDataItem = () => {\r\n    if (this.MenuComponent?.selectedMenuItem?.navRoutes?.apiSelectFromCatalogPath) {\r\n      this.getCatalogPage(1);\r\n    }\r\n    else if (this.MenuComponent?.selectedMenuItem?.navRoutes?.apiGetFormPath) {\r\n      //get form for this model\r\n      var blankFormApiPath = this.MenuComponent?.selectedMenuItem?.navRoutes?.apiGetFormPath;\r\n      this.httpClientService.post(this.serverUrl + blankFormApiPath, this.MenuComponent?.selectedMenuItem)\r\n        .subscribe((i: Form) => {\r\n          this.FormsContext!.form = i;\r\n          this.FormComponent.Start(i);\r\n          this.currentControl = this.FormsContext?.form;\r\n\r\n        }, this.ShowError);\r\n    }\r\n  }\r\n\r\n  selectFromCatalogPageClicked = (page: any) => {\r\n    this.getCatalogPage(page as number);\r\n  }\r\n  OnCatalogSearch = (keyword: string) => {\r\n    this.getCatalogPage(1, keyword);\r\n  }\r\n\r\n  getCatalogPage = (page: number, searchTerm?: string) => {\r\n    var selectFromCatalogPath = this.MenuComponent?.selectedMenuItem?.navRoutes?.apiSelectFromCatalogPath + \"/\" + page.toString();\r\n    if (searchTerm) {\r\n      selectFromCatalogPath += \"/\" + searchTerm;\r\n    }\r\n    this.httpClientService.post(this.serverUrl + selectFromCatalogPath, this.MenuComponent?.selectedMenuItem)\r\n      .subscribe((d: Data) => {\r\n        //show select from catalog\r\n        this.CatalogData = d;\r\n        this.currentControl = this.CatalogData;\r\n\r\n      }, this.ShowError);\r\n  }\r\n\r\n  OpenDataItem = (dataItem: Item) => {\r\n\r\n    var apiPath = dataItem.navRoutes?.apiGetFormsContextPath;\r\n    console.log(\"dataItem\");\r\n    console.log(dataItem);\r\n    this.httpClientService.post(this.serverUrl + apiPath, dataItem)\r\n      .subscribe((c: FormsContext) => {\r\n        this.FormsContext = c;\r\n        this.addToBreadCrumb(this.FormsContext.title!);\r\n        var item: Item = new Item();\r\n        item.title = \"Properties\";\r\n        item.id = dataItem.id;\r\n        item.type = dataItem.type;\r\n        item.parentId = dataItem.parentId;\r\n        item.navRoutes = c.navRoutes;\r\n        console.log(\"item properties\");\r\n        console.log(item);\r\n        this.FormsContext.menu?.items?.unshift(item);\r\n\r\n      }, this.ShowError);\r\n  }\r\n\r\n\r\n\r\n  EditDataItem = (dataItem: Item) => {\r\n\r\n    if (!dataItem.navRoutes || !dataItem.navRoutes.apiGetFormPath) {\r\n      this.AlertComponent.alert(\"No path to get form supplied\", \"danger\");\r\n      return;\r\n    }\r\n    var editFormApi = dataItem.navRoutes?.apiGetFormPath;\r\n    this.httpClientService.post(this.serverUrl + editFormApi, dataItem)\r\n      .subscribe((i: Form) => {\r\n        this.FormsContext!.form = i;\r\n        this.FormComponent.Start(i);\r\n        this.currentControl = i;\r\n\r\n      }, this.ShowError);\r\n  }\r\n\r\n  OnSelectFromCatalogOk = (dataItem: any) => {\r\n    var item = dataItem[0];\r\n    var apiPath = this.MenuComponent?.selectedMenuItem?.navRoutes?.apiSelectedFromCatalogPath;\r\n    this.httpClientService.post(this.serverUrl + apiPath, item)\r\n      .subscribe(\r\n        (dbItem: any) => {\r\n          this.AlertComponent.alert(\"Item Added Ok\", \"success\");\r\n          this.currentControl = this.FormsContext?.data;\r\n          this.FormsContext?.data?.items?.push(dbItem);\r\n        }, this.ShowError)\r\n  }\r\n\r\n  /********************************************FORM*******************************************/\r\n\r\n\r\n\r\n  SaveClicked = (form: Form) => {\r\n\r\n    var apiPath = this.FormComponent.Form?.navRoutes?.apiUpsertPath;\r\n\r\n    if (apiPath != null) {\r\n      this.httpClientService.post(this.serverUrl + apiPath, form)\r\n        .subscribe((x: number) => {\r\n          this.ngZone.run(() => {\r\n            this.FormComponent.alert(\"Cambios Guardados Correctamente\", \"success\");\r\n          });\r\n\r\n        }, this.ShowError);\r\n    }\r\n  }\r\n\r\n\r\n  breadCrumbItemClicked = (bcu: BreadCrumbItem) => {\r\n    var found = false;\r\n\r\n\r\n    this.ngZone.run(() => {\r\n\r\n      this.FormsContext = bcu.object;\r\n      this.currentControl = undefined;\r\n      this.MenuComponent!.selectedMenuItem = undefined;\r\n\r\n    });\r\n\r\n\r\n  }\r\n\r\n  addToBreadCrumb = (title: string) => {\r\n\r\n    var bci = new BreadCrumbItem();\r\n    bci.object = this.FormsContext;\r\n    bci.title = title;\r\n    this.ngZone.run(() => {\r\n      this.BreadCrumbItems?.push(bci);\r\n    });\r\n  }\r\n\r\n\r\n  pageClicked = (page: number) => {\r\n    if (this.FormsContext && this.FormsContext.data) {\r\n      this.FormsContext.data.currentPage = page;\r\n      var menuItem = this.MenuComponent!.selectedMenuItem;\r\n      var apiPath = this.MenuComponent?.selectedMenuItem?.navRoutes?.apiGetDataPath + \"/\" + page.toString();\r\n      this.httpClientService.post(this.serverUrl + apiPath, menuItem)\r\n        .subscribe((x: Data) => {\r\n\r\n          this.FormsContext!.data = x;\r\n          this.currentControl = x;\r\n\r\n        }, this.ShowError);\r\n    }\r\n  }\r\n\r\n  DeleteClicked = (form: Form) => {\r\n    if (this.FormsContext) {\r\n      var apiPath = this.FormsContext.navRoutes?.apiDeletePath;\r\n      var item: Item = new Item();\r\n      item.id = this.FormsContext.id;\r\n      item.type = form.type;\r\n      this.httpClientService.post(this.serverUrl + apiPath, item)\r\n        .subscribe((x: Data) => {\r\n\r\n          this.FormComponent.alert(\"Elemento Eliminado Correctamente\", \"success\");\r\n        }, (err: any) => { this.ShowError });\r\n    }\r\n  }\r\n\r\n  ShowError = (err: any) => {\r\n    console.log(\"Error:\");\r\n    console.log(err);\r\n    if (err.error && err.error.text) {\r\n      this.AlertComponent.alert(err.error.text, \"danger\");\r\n    }\r\n    else if (err.error) {\r\n      this.AlertComponent.alert(err.error, \"danger\");\r\n    }\r\n    else if (err) {\r\n      this.AlertComponent.alert(err, \"danger\");\r\n    }\r\n    else {\r\n      this.AlertComponent.alert(\"Ha ocurrido un error\", \"danger\");\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","\r\n\r\n\r\n<div class=\"d-flex\" id=\"wrapper\">\r\n    <!-- Sidebar-->\r\n    <div class=\"border-end bg-white\" id=\"sidebar-wrapper\">\r\n        <div class=\"sidebar-heading border-bottom bg-light\">{{FormsContext?.title}}</div>\r\n        <app-menu [menu]=\"FormsContext?.menu\" (itemClicked)=\"menuItemClicked($event)\"></app-menu>\r\n    </div>\r\n    <!-- Page content wrapper-->\r\n    <div id=\"page-content-wrapper\">\r\n        <!-- Top navigation-->\r\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light border-bottom\">\r\n            <div class=\"container-fluid\">\r\n                <!-- <button class=\"btn btn-primary\" id=\"sidebarToggle\">Toggle Menu</button> -->\r\n                <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span\r\n            class=\"navbar-toggler-icon\"></span></button>\r\n                <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <app-bread-crumb [breadCrumbItems]=\"BreadCrumbItems\" (breadCrumbItemClicked)=\"breadCrumbItemClicked($event)\">\r\n                    </app-bread-crumb>\r\n                    <ul class=\"navbar-nav ms-auto mt-2 mt-lg-0\">\r\n                        <li class=\"nav-item active\"><a class=\"nav-link\" href=\"#\">{{currentUser}}</a></li>\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n\r\n        <!-- Page content-->\r\n        <div class=\"container\">\r\n\r\n            <app-select-from-catalog [hidden]=\"!CatalogData || currentControl!==CatalogData\" [Data]=\"CatalogData\" (onPageClicked)=\"selectFromCatalogPageClicked($event)\" (OnSearch)=\"OnCatalogSearch($event)\" (OnOk)=\"OnSelectFromCatalogOk($event)\"></app-select-from-catalog>\r\n            <app-alert></app-alert>\r\n            <app-paged-list [hidden]=\"currentControl!==FormsContext?.data\" [data]=\"FormsContext?.data\" (AddNewDataItem)=\"AddNewDataItem()\" (OpenDataItem)=\"OpenDataItem($event)\" (EditDataItem)=\"EditDataItem($event)\">\r\n            </app-paged-list>\r\n\r\n            <app-form [hidden]=\"currentControl!==FormsContext?.form\" (SaveClicked)=\"SaveClicked($event)\" (DeleteClicked)=\"DeleteClicked($event)\">\r\n            </app-form>\r\n            <hr>\r\n\r\n            <app-pagination [hidden]=\"currentControl!==FormsContext?.data\" class=\"pagination\" *ngIf=\"FormsContext && FormsContext.data && FormsContext.data.totalPages\" [totalPages]=\"FormsContext?.data?.totalPages!\" (pageClicked)=\"pageClicked($event)\"></app-pagination>\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n</div>\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { FormGeneratorModule } from './form-generator/form-generator.module';\r\nimport { HttpClientService } from './services/http-client.service';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { MenuModule } from './menu/menu.module';\r\nimport { PagedListModule } from './paged-list/paged-list.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AlertComponent } from './components/alert/alert.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AlertComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([]),\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    FormGeneratorModule,\r\n    MenuModule,\r\n    PagedListModule\r\n  ],\r\n  providers: [\r\n    HttpClientService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, NgZone, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-alert',\r\n  templateUrl: './alert.component.html',\r\n  styleUrls: ['./alert.component.css']\r\n})\r\nexport class AlertComponent implements OnInit {\r\n\r\n  constructor(private ngZone: NgZone) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  alert = (message: string, type: string) => {\r\n    this.ngZone.run(() => {\r\n      let element = document.getElementById('liveAlertPlaceholder') as HTMLElement;\r\n\r\n      var wrapper = document.createElement('div');\r\n      wrapper.innerHTML = '<div class=\"alert alert-' + type + ' alert-dismissible\" role=\"alert\">' + message + '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button></div>';\r\n      if (element) {\r\n        (element as any).append(wrapper);\r\n      }\r\n      console.log(element);\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<div id=\"liveAlertPlaceholder\">\r\n\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Item } from 'src/app/models/item';\r\nimport { Form } from '../../../models/form';\r\n\r\n@Component({\r\n  selector: 'app-check-box-control',\r\n  templateUrl: './check-box-control.component.html',\r\n  styleUrls: ['./check-box-control.component.css']\r\n})\r\nexport class CheckBoxControlComponent implements OnInit {\r\n\r\n  @Input() Form!: Form;\r\n  @Input() Field!: Item;\r\n  @Input() FormGroup!: FormGroup;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row mb-3\" [formGroup]=\"FormGroup\">\r\n    <div class=\"col-sm-10 offset-sm-2\">\r\n        <div class=\"form-check\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"check-box-{{Field.key}}\" [formControlName]=\"'value'\">\r\n            <label class=\"form-check-label\" for=\"check-box-{{Field.key}}\">\r\n        {{Field.title}}\r\n      </label>\r\n        </div>\r\n    </div>\r\n</div>","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, NgZone, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { FormArray, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription, timeout } from 'rxjs';\r\nimport { Form } from '../../../models/form';\r\n\r\n\r\nimport { FormsService } from '../../services/forms.service';\r\n\r\n@Component({\r\n  selector: 'app-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.css']\r\n})\r\nexport class FormComponent implements OnInit, AfterViewInit {\r\n\r\n\r\n  Form: Form | undefined;\r\n  FormGroup: FormGroup | undefined;\r\n  busy?: Promise<any> | Subscription;\r\n  @Output() SaveClicked = new EventEmitter<Form>();\r\n  @Output() DeleteClicked = new EventEmitter();\r\n\r\n\r\n  constructor(private formsService: FormsService, private ngZone: NgZone) {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit = () => {\r\n    if (this.FormGroup != null) {\r\n      var payLoad = this.FormGroup?.getRawValue();\r\n      this.SaveClicked.emit(payLoad);\r\n    }\r\n  }\r\n\r\n  Start(form: Form) {\r\n    this.Form = form;\r\n    var formGroup = this.formsService.GetFormGroup(this.Form);\r\n    this.FormGroup = formGroup;\r\n    console.log(\"fg\");\r\n    console.log(this.FormGroup);\r\n  }\r\n\r\n  Delete = () => {\r\n    var payLoad = this.FormGroup?.getRawValue();\r\n    this.DeleteClicked.emit(payLoad);\r\n  }\r\n\r\n\r\n  alert = (message: string, type: string) => {\r\n    this.ngZone.run(() => {\r\n      let element = document.getElementById('liveAlertPlaceholder') as HTMLElement;\r\n\r\n      var wrapper = document.createElement('div');\r\n      wrapper.innerHTML = '<div class=\"alert alert-' + type + ' alert-dismissible\" role=\"alert\">' + message + '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button></div>';\r\n      if (element) {\r\n        (element as any).append(wrapper);\r\n      }\r\n      console.log(element);\r\n    });\r\n\r\n  }\r\n}\r\n\r\n","<!-- https://angular.io/guide/dynamic-form -->\r\n\r\n\r\n<form *ngIf=\"FormGroup && Form\" [formGroup]=\"FormGroup\" (ngSubmit)=\"onSubmit()\">\r\n\r\n    <h4>{{FormGroup.controls['title'].value}}</h4>\r\n    <hr>\r\n\r\n    <span *ngVar=\"FormGroup.controls['properties'] as Fields\" [formArrayName]=\"'properties'\">\r\n    <span *ngFor=\"let field of Form.properties;let i=index\">\r\n\r\n      <ng-container *ngVar=\"Fields.controls[i] as Field\">\r\n        <span *ngIf=\"!field.isPrimaryKey\" [formGroup]=\"Field\">\r\n          <fieldset [disabled]=\"field.readOnly\" [hidden]=\"field.hidden\">\r\n            <span [ngSwitch]=\"field.inputType\">\r\n              <app-input-text *ngSwitchCase=\"'text'\" [Form]=\"Form\" [Field]=\"field\" [FormGroup]=\"Field\">\r\n              </app-input-text>\r\n\r\n              <app-input-text *ngSwitchCase=\"'number'\" [Form]=\"Form\" [Field]=\"field\" [FormGroup]=\"Field\">\r\n              </app-input-text>\r\n\r\n              <app-check-box-control *ngSwitchCase=\"'checkbox'\" [Form]=\"Form\" [Field]=\"field\" [FormGroup]=\"Field\">\r\n              </app-check-box-control>\r\n\r\n\r\n\r\n            </span>\r\n\r\n    </fieldset>\r\n    </span>\r\n    </ng-container>\r\n    </span>\r\n    </span>\r\n\r\n    <div id=\"liveAlertPlaceholder\">\r\n\r\n    </div>\r\n\r\n\r\n    <div class=\"flex-container\">\r\n        <button type=\"submit\" class=\"btn btn-primary\">Save</button>\r\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"Delete()\">Delete</button>\r\n    </div>\r\n</form>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Item } from 'src/app/models/item';\r\nimport { Form } from '../../../models/form';\r\n\r\n\r\n@Component({\r\n  selector: 'app-input-text',\r\n  templateUrl: './input-text.component.html',\r\n  styleUrls: ['./input-text.component.css']\r\n})\r\nexport class InputTextComponent implements OnInit {\r\n\r\n  @Input() Form!: Form;\r\n  @Input() Field!: Item;\r\n  @Input() FormGroup!: FormGroup;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row mb-3\" [formGroup]=\"FormGroup\">\r\n\r\n    <label [attr.for]=\"Field.key\" class=\"col-sm-2 col-form-label\">{{Field.title}}</label>\r\n\r\n    <div class=\"col-sm-10\">\r\n        <input [formControlName]=\"'value'\" class=\"form-control form-control-sm\" type=\"text\" [attr.type]=\"Field.inputType\" placeholder={{Field.title}} [attr.aria-label]=\"Field.title\">\r\n        <div class=\"form-text\">{{Field.description}}</div>\r\n    </div>\r\n\r\n</div>","import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Item } from 'src/app/models/item';\r\nimport { Data } from 'src/app/paged-list/models/data';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-select-from-catalog',\r\n  templateUrl: './select-from-catalog.component.html',\r\n  styleUrls: ['./select-from-catalog.component.css']\r\n})\r\nexport class SelectFromCatalogComponent implements OnInit, AfterViewInit {\r\n\r\n  Modal: any\r\n  Response?: boolean;\r\n  @Input() Data?: Data;\r\n  @Output() onPageClicked = new EventEmitter();\r\n  SearchWord?: string;\r\n  @Output() OnSearch = new EventEmitter<string>();\r\n  SelectedDataItem?: Item;\r\n  @Output() OnOk = new EventEmitter<Item>();\r\n\r\n\r\n  constructor(private modalservice: ModalService) {\r\n    this.modalservice.SelectFromCatalog = this;\r\n  }\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // $(() => {\r\n    //   this.Modal = $(\"#selectFromCatalogComponent\");\r\n    // });\r\n\r\n  }\r\n\r\n  // Show = (data: Data) => {\r\n  //   this.Data = data;\r\n  //   this.Modal.modal(\"show\");\r\n  //   return new Promise<boolean>((res, rej) => {\r\n  //     this.Modal.on(\"hidden.bs.modal\", (e: any) => {\r\n  //       this.Modal.modal(\"hide\");\r\n  //       this.Response = true;\r\n  //       res(this.Response);\r\n  //     });\r\n  //   });\r\n  // }\r\n\r\n\r\n  pageClicked = (evt: any) => {\r\n    this.onPageClicked.emit(evt);\r\n  }\r\n\r\n  Search = () => {\r\n\r\n    this.OnSearch.emit(this.SearchWord);\r\n\r\n  }\r\n\r\n  Ok = () => {\r\n    if (this.SelectedDataItem) {\r\n      this.OnOk.emit(this.SelectedDataItem);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n  <h5 class=\"modal-title\">Select from catalog</h5>\r\n</div>\r\n\r\n<div class=\"input-group mb-3\">\r\n  <input type=\"text\" class=\"form-control\" placeholder=\"Search...\" aria-label=\"search\" aria-describedby=\"search\"\r\n    [(ngModel)]=\"SearchWord\">\r\n  <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"search\" (click)=\"Search()\">Search</button>\r\n</div>\r\n<select class=\"form-select\" multiple aria-label=\"multiple select example\" [(ngModel)]=\"SelectedDataItem\">\r\n  <option *ngFor=\"let dataItem of Data?.items\" [value]=\"dataItem\">\r\n    {{dataItem.title}}\r\n  </option>\r\n</select>\r\n\r\n<hr>\r\n<app-pagination class=\"pagination\" *ngIf=\"Data && Data.totalPages\" [totalPages]=\"Data?.totalPages!\"\r\n  (pageClicked)=\"pageClicked($event)\"></app-pagination>\r\n\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\r\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"Ok()\">Ok</button>\r\n</div>\r\n","import { Directive, Input, TemplateRef, ViewContainerRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n  selector: '[ngVar]',\r\n})\r\nexport class VarDirective {\r\n  @Input()\r\n  set ngVar(context: any) {\r\n    this.context.$implicit = this.context.ngVar = context;\r\n    this.updateView();\r\n  }\r\n\r\n  context: any = {};\r\n\r\n  constructor(private vcRef: ViewContainerRef, private templateRef: TemplateRef<any>) { }\r\n\r\n  updateView() {\r\n    this.vcRef.clear();\r\n    this.vcRef.createEmbeddedView(this.templateRef, this.context);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormComponent } from './components/form/form.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { VarDirective } from './directives/ng-var-directive';\r\nimport { FormsService } from './services/forms.service';\r\nimport { InputTextComponent } from './components/input-text/input-text.component';\r\nimport { CheckBoxControlComponent } from './components/check-box-control/check-box-control.component';\r\nimport { SelectFromCatalogComponent } from './components/select-from-catalog/select-from-catalog.component';\r\nimport { PagedListModule } from '../paged-list/paged-list.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FormComponent,\r\n    VarDirective,\r\n    InputTextComponent,\r\n    CheckBoxControlComponent,\r\n    SelectFromCatalogComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    PagedListModule\r\n  ],\r\n  exports: [\r\n    FormComponent,\r\n    SelectFromCatalogComponent\r\n  ],\r\n  providers: [\r\n    FormsService\r\n  ]\r\n})\r\nexport class FormGeneratorModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { Item } from 'src/app/models/item';\r\nimport { NavRoutes } from 'src/app/models/nav-routes';\r\nimport { Form } from '../../models/form';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormsService {\r\n\r\n\r\n\r\n  constructor(private fb: FormBuilder,\r\n  ) { }\r\n\r\n\r\n  GetFormGroup = (form: Form) => {\r\n    console.log(\"form al momento de crear el form group\");\r\n    console.log(form);\r\n    let _formGroup = this.fb.group({\r\n      title: [form.title, Validators.required],\r\n      type: [form.type, Validators.required],\r\n      properties: this.GetFieldFormArray(form) as FormArray\r\n    //  navRoutes: this.GetNavRoutesFormGroup(form.navRoutes!)\r\n    });\r\n    return _formGroup;\r\n  }\r\n\r\n  private GetFieldFormArray = (form: Form): FormArray => {\r\n    let fields: FormArray = this.fb.array([]);\r\n    if (form.properties) {\r\n      for (const field of form.properties) {\r\n\r\n        let fg = this.GetField(field);\r\n        fields.push(fg);\r\n      }\r\n    }\r\n    return fields;\r\n  }\r\n\r\n\r\n  public GetField = (field: Item) => {\r\n\r\n    let group = this.fb.group({\r\n      key: [field.key, Validators.required],\r\n      value: [field.value, field.required === true ? Validators.required : null],\r\n      label: [field.title],\r\n      type: [field.type],\r\n      isPrimaryKey: [field.isPrimaryKey],\r\n      inputType: [field.inputType],\r\n      description: [field.description],\r\n      readOnly: [field.readOnly],\r\n      hidden: [field.hidden],\r\n      ignoreForUpsert: [field.ignoreForUpsert],\r\n      apiGetFormPath: [field.navRoutes?.apiGetFormPath],\r\n      apiUpsertPath: [field.navRoutes?.apiUpsertPath]\r\n    });\r\n    return group;\r\n  }\r\n\r\n  // GetNavRoutesFormGroup = (navRoutes: NavRoutes) => {\r\n  //   let fg = this.fb.group(\r\n  //     // {\r\n  //     //   apiGetFormPath:navRoutes.apiGetFormPath\r\n  //     //   apiGetDataPath:\r\n  //     //   apiUpsertPath:\r\n  //     //   apiDeletePath:\r\n  //     //   apiGetDataContextPath:\r\n  //     //   apiSelectFromCatalogPath:\r\n  //     //   apiSelectedFromCatalogPath:\r\n  //     // }\r\n  //     navRoutes\r\n  //   );\r\n  // }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { BreadCrumbItem } from '../../models/bread-crumb-item';\r\n\r\n@Component({\r\n  selector: 'app-bread-crumb',\r\n  templateUrl: './bread-crumb.component.html',\r\n  styleUrls: ['./bread-crumb.component.css']\r\n})\r\nexport class BreadCrumbComponent implements OnInit {\r\n\r\n  @Input() breadCrumbItems?: BreadCrumbItem[];\r\n  @Output() breadCrumbItemClicked = new EventEmitter();\r\n  constructor() {\r\n    this.breadCrumbItems = [];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n  itemClicked = (item: BreadCrumbItem) => {\r\n    var found = false;\r\n    var arr = this.breadCrumbItems;\r\n    for (var i of this.breadCrumbItems!) {\r\n      if (found) {\r\n        arr?.splice(arr!.indexOf(i), 1);\r\n      }\r\n      if (i === item) {\r\n        found = true;\r\n      }\r\n    }\r\n    this.breadCrumbItems = arr;\r\n    this.breadCrumbItemClicked.emit(item);\r\n  }\r\n\r\n}\r\n","<nav style=\"--bs-breadcrumb-divider: '>';\" aria-label=\"breadcrumb\">\r\n    <ol class=\"breadcrumb\">\r\n        <ng-container *ngFor=\"let item of breadCrumbItems\">\r\n            <li class=\"breadcrumb-item\"><a href=\"#\" (click)=\"itemClicked(item)\">{{item.title}}</a></li>\r\n        </ng-container>\r\n\r\n    </ol>\r\n</nav>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { Item } from 'src/app/models/item';\r\nimport { HttpClientService } from 'src/app/services/http-client.service';\r\nimport { BreadCrumbItem } from '../../models/bread-crumb-item';\r\nimport { Menu } from '../../models/menu';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n\r\n  @Input() menu?:Menu;\r\n  @Output() itemClicked = new EventEmitter<any>();\r\n\r\n  selectedMenuItem?: Item;\r\n\r\n  constructor(private httpClientService: HttpClientService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  menuItemClicked = (item: any) => {\r\n    this.selectedMenuItem = item;\r\n    this.itemClicked.emit(item);\r\n  }\r\n\r\n  breadCrumbItemClick = (bcu: BreadCrumbItem) => {\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"list-group list-group-flush\">\r\n    <ng-container *ngFor=\"let item of menu?.items\">\r\n        <a [routerLink]=\"[]\" class=\"list-group-item list-group-item-action list-group-item-light p-3\" [ngClass]=\"{active: selectedMenuItem===item}\" (click)=\"menuItemClicked(item)\"> {{item.title}}\r\n    </a>\r\n    </ng-container>\r\n\r\n\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MenuRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MenuRoutingModule } from './menu-routing.module';\r\nimport { MenuComponent } from './components/menu/menu.component';\r\nimport { BreadCrumbComponent } from './components/bread-crumb/bread-crumb.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MenuComponent,\r\n    BreadCrumbComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MenuRoutingModule\r\n  ],\r\n  exports: [\r\n    MenuComponent,\r\n    BreadCrumbComponent\r\n  ]\r\n})\r\nexport class MenuModule { }\r\n","\r\n\r\nexport class BreadCrumbItem {\r\n\r\n  title?: string;\r\n  object: any;\r\n}\r\n","import { NavRoutes } from \"./nav-routes\";\r\n\r\n\r\nexport class Item {\r\n  id?: object;\r\n  parentId?: object;\r\n\r\n  key?: string;\r\n  title?: string;\r\n  description?: string;\r\n  required?: boolean;\r\n  inputType?: string;\r\n  readOnly?: string;\r\n  hidden?: boolean;\r\n\r\n  type?: string;\r\n  useAsDataItemLabel?: boolean;\r\n  isPrimaryKey?: boolean;\r\n  isNavigationCollection?: boolean;\r\n  ignoreForUpsert?: boolean;\r\n  value: any;\r\n\r\n  navRoutes?:NavRoutes;\r\n}\r\n\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Item } from 'src/app/models/item';\r\n\r\n\r\nimport { Data } from '../../models/data';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-paged-list',\r\n  templateUrl: './paged-list.component.html',\r\n  styleUrls: ['./paged-list.component.css']\r\n})\r\nexport class PagedListComponent implements OnInit {\r\n\r\n\r\n  @Input() data?:Data;\r\n  @Output() AddNewDataItem = new EventEmitter();\r\n  @Output() OpenDataItem = new EventEmitter();\r\n  @Output() EditDataItem = new EventEmitter();\r\n  @Output() DeleteDataItem = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  Add = () => {\r\n    this.AddNewDataItem.emit();\r\n  }\r\n\r\n  //When they open a dataitem we re-populate the menu\r\n  openDataItem = (dataItem: Item) => {\r\n    this.OpenDataItem.emit(dataItem);\r\n  }\r\n\r\n  //When they edit an item, we show the edit form\r\n  editDataItem = (dataItem: Item) => {\r\n    this.EditDataItem.emit(dataItem);\r\n  }\r\n\r\n  deleteDataItem = (dataItem: Item) => {\r\n    this.DeleteDataItem.emit(dataItem);\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"header\">\r\n        <h4>{{data?.title}}</h4>\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"Add()\">Add</button>\r\n    </div>\r\n</div>\r\n<hr>\r\n<div *ngFor=\"let dataItem of data?.items\">\r\n    <div class=\"flex-container\">\r\n\r\n        <a [routerLink]=\"[]\" (click)=\"openDataItem(dataItem)\"><i class=\"bi bi-caret-right-fill\"></i>\r\n      {{dataItem.title}}</a>\r\n    </div>\r\n</div>","\r\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pagination',\r\n  templateUrl: './pagination.component.html',\r\n  styleUrls: ['./pagination.component.css']\r\n})\r\nexport class PaginationComponent implements OnInit {\r\n\r\n  // @Input() totalPages!: number;\r\n\r\n  private _totalPages!: number;\r\n\r\n  get totalPages(): number {\r\n    return this._totalPages;\r\n  }\r\n\r\n  //https://stackoverflow.com/q/46081339/3596441\r\n  @Input()\r\n  set totalPages(value: number) {\r\n\r\n    this._totalPages = value;\r\n    this.pages?.splice(0, this.pages.length);\r\n    //set pages\r\n    for (var i = 0; i < this.totalPages; i++) {\r\n      this.pages?.push(i + 1);\r\n    }\r\n    this.currentPage = 1;\r\n  }\r\n\r\n  currentPage!: number;\r\n\r\n  @Output() pageClicked = new EventEmitter();\r\n\r\n  pages?: number[];\r\n\r\n  constructor() {\r\n    this.pages = [];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  clickNext = () => {\r\n    if (this.currentPage == this.totalPages) {\r\n      return;\r\n    }\r\n    this.currentPage++;\r\n    this.pageClicked.emit(this.currentPage);\r\n  }\r\n\r\n  clickPrevious = () => {\r\n    if (this.currentPage === 1) {\r\n      return;\r\n    }\r\n\r\n    this.currentPage--;\r\n    this.pageClicked.emit(this.currentPage);\r\n\r\n  }\r\n\r\n\r\n  clickPage = (page: number) => {\r\n    this.currentPage = page;\r\n    this.pageClicked.emit(this.currentPage);\r\n  }\r\n}\r\n","<nav aria-label=\"Page navigation example\">\r\n    <ul class=\"pagination justify-content-center\">\r\n        <li class=\"page-item\" [ngClass]=\"{disabled: currentPage===1}\">\r\n            <a class=\"page-link\" href=\"#\" (click)=\"clickPrevious()\">Previous</a>\r\n        </li>\r\n\r\n        <ng-container *ngFor=\"let page of pages\">\r\n            <li class=\"page-item\" [ngClass]=\"{active: page===currentPage}\" (click)=\"clickPage(page)\">\r\n                <a class=\"page-link\" href=\"#\">{{page}}</a>\r\n            </li>\r\n        </ng-container>\r\n\r\n        <li class=\"page-item\" [ngClass]=\"{disabled: currentPage===totalPages}\">\r\n            <a class=\"page-link\" href=\"#\" (click)=\"clickNext()\">Next</a>\r\n        </li>\r\n    </ul>\r\n</nav>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PagedListComponent } from './components/paged-list/paged-list.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { PaginationComponent } from './components/pagination/pagination.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PagedListComponent,\r\n    PaginationComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule\r\n  ],\r\n  exports:[\r\n    PagedListComponent,\r\n    PaginationComponent\r\n  ]\r\n})\r\nexport class PagedListModule { }\r\n","\r\nimport { environment } from \"./../../environments/environment\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@Injectable()\r\nexport class HttpClientService {\r\n  Prefix: string; // = \"http://localhost:60295/api/\";\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router\r\n  ) {\r\n\r\n    this.Prefix = environment.baseApiHref;\r\n  }\r\n\r\n\r\n  get = (url: string): any => {\r\n    // const httpOptions = { withCredentials: true };\r\n    // return this.http.get(url, httpOptions);\r\n    return this.http.get(url);\r\n  }\r\n\r\n\r\n  post = (url: string, body: any): any => {\r\n    // const httpOptions = { withCredentials: true };\r\n    // return this.http.post(url, body, httpOptions);\r\n    return this.http.post(url, body);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { SelectFromCatalogComponent } from '../form-generator/components/select-from-catalog/select-from-catalog.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalService {\r\n\r\n  SelectFromCatalog?: SelectFromCatalogComponent;\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseApiHref: \"\",\r\n   serverUrl : \"/\" //cms root\r\n  //serverUrl: \"http://localhost:54792/\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}